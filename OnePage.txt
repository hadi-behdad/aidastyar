نکات خیلی خیلی مهم: موارد زیر رو تو جوابت در نظر بگیر
هیچ کامنتی تو این پروژه نزار
خط اول هر فایل، باید آدرس و نام فایل رو داشته باشه
فایل ها رو تو قالب تیکه های کد که امکان کپی و دانلود داره برام بفرست که راحت بتونم کپی کنم
-----------------------------------------------------------------------------------------------------
<!--/home/aidastya/public_html/wp-content/themes/woodmart-child/form.html-->
<!DOCTYPE html>
<html lang="fa">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>فرم چند مرحله‌ای</title>
    <link rel="stylesheet" href="assets/css/style.css">
    <link rel="stylesheet" href="assets/fonts/vazir-font.css">
</head>
<body>
    <form id="multi-step-form">
        <div id="header-container">
            <div id="step-counter"><span id="current-step">1</span>/<span id="total-steps">12</span></div>
            <button type="button" id="back-button">›</button>
        </div>
        <div id="progress-bar-container">
            <div id="progress-bar"></div>
        </div>

        <div id="gender-selection-step" class="step active">
            <h1 id="form-title">سیستم هوشمند رژیم غذایی هوش مصنوعی</h1>
            <h2>جنسیت خود را انتخاب کنید</h2>
            <div id="gender-selection">
                <div class="gender-option" data-gender="male"><img src="assets/images/webp/male.webp" alt="مرد"></div>
                <div class="gender-option" data-gender="female"><img src="assets/images/webp/female.webp" alt="زن"></div>
            </div>
        
            <div id="terms-checkbox" class="checkbox-container terms-combined">
                <input type="checkbox" id="confirm-terms" class="real-checkbox">
                <label for="confirm-terms" class="checkbox-label">
                    <span class="check-icon"></span>
                    <span class="label-text">شرایط و قوانین را می‌پذیرم</span>
                </label>
                <div class="terms-box">
                    <ul class="terms-list">
                        <li>اطلاعات سلامت و شخصی من، با حداکثر امنیت و مطابق قوانین محرمانگی، نزد این سامانه محفوظ خواهد ماند.</li>
                        <li>توصیه‌های این سیستم توسط پیشرفته‌ترین الگوریتم‌های هوش مصنوعی ارائه می‌شود، اما جایگزین تشخیص پزشک نیست.</li>
                        <li>مسئولیت نهایی تصمیمات سلامت و استفاده از این توصیه‌ها بر عهده خودم است.</li>
                        <li>متعهد می‌شوم برای مسائل پزشکی مهم، حتماً با پزشک معتمدم مشورت کنم.</li>
                    </ul>
                </div>
            </div>
        </div>

        <div id="goal-selection-step" class="step">
            <h2>هدفت از رژیم غذایی چیه؟</h2>
            <div id="goal-selection">
                <div class="goal-option" data-goal="weight-loss">
                    <img src="assets/images/png/gain-weight-min.png" alt="کاهش وزن" width="60" height="30">
                    <span>کاهش وزن (به وزن ایده‌آل برسم)</span>
                </div>
                <div class="goal-option" data-goal="weight-gain">
                    <img src="assets/images/png/gain-weight-min.png" alt="افزایش وزن" width="60" height="30">
                    <span>افزایش وزن (قدرت و انرژی را تجربه کنم)</span>
                </div>
                <div class="goal-option" data-goal="fitness">
                    <img src="assets/images/png/stay-fit-min.png" alt="تناسب اندام" width="60" height="30">
                    <span>تناسب اندام (به اندام دلخواهم برسم)</span>
                </div>
            </div>
        </div>

        <div id="age-input-step" class="step">
            <h2>سن شما چند سال است؟</h2>
            <div class="input-container">
                <input type="text" inputmode="numeric" id="age-input">
                <span id="age-display">0 سال</span>
            </div>
            <div id="age-validation-container">
                <p id="age-error" class="error-message"></p>
                <div class="separator-dotted"></div>
                <div class="info-box">
                    <div class="info-content">
                        <img src="assets/images/png/age-min.png" width="30" height="30" alt="سن">
                        <div class="info-text">
                            <span class="first-line">سن شما را می‌پرسیم تا برنامه شخصی شما را ایجاد کنیم.</span>
                            <span class="second-line">افراد مسن‌تر نسبت به افراد جوان‌تر با همان شاخص توده بدنی (BMI)، معمولاً چربی بدن بیشتری دارند</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="height-input-step" class="step">
            <h2>قد شما چقدر است؟</h2>
            <div class="input-container">
                <input type="text" inputmode="numeric" id="height-input">
                <span id="height-display">0 سانتی‌متر</span>
            </div>
            <div id="height-validation-container">
                <p id="height-error" class="error-message"></p>
                <div class="separator-dotted"></div>
                <div class="info-box">
                    <div class="info-content">
                        <img src="assets/images/png/height-min.png" width="30" height="30" alt="قد">
                        <div class="info-text">
                            <span class="first-line">محاسبه شاخص توده بدنی شما</span>
                            <span class="second-line">شاخص توده بدنی (BMI) به طور گسترده به عنوان یک معیار برای سنجش خطر ابتلا یا شیوع برخی مشکلات سلامتی مورد استفاده قرار می‌گیرد</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="weight-input-step" class="step">
            <h2>وزن شما چقدر است؟</h2>
            <div class="input-container">
                <input type="text" inputmode="numeric" id="weight-input">
                <span id="weight-display">0 کیلوگرم</span>
            </div>
            <div id="weight-validation-container">
                <p id="weight-error" class="error-message"></p>
                <div class="separator-dotted"></div>
                <div id="bmi-result-container">
                    <div class="bmi-info">
                        <h3>شاخص توده بدنی (BMI) شما: <span id="bmi-value">0</span></h3>
                        <p id="bmi-category" class="bmi-category"></p>
                    </div>
                    <div class="bmi-scale-container">
                        <div class="bmi-scale-labels">
                            <span>کمبود وزن</span>
                            <span>نرمال</span>
                            <span>اضافه وزن</span>
                            <span>چاق</span>
                            <span>چاقی شدید</span>
                        </div>
                        <div class="bmi-scale">
                            <div id="bmi-indicator" class="bmi-indicator"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="target-weight-step" class="step">
            <h2>وزن هدف شما چقدر است؟</h2>
            <div class="input-container">
                <input type="text" inputmode="numeric" id="target-weight-input">
                <span id="target-weight-display">0 کیلوگرم</span>
            </div>
            <div id="target-weight-validation-container">
                <p id="targetWeight-error" class="error-message"></p>
                <div class="separator-dotted"></div>
                <div class="info-box">
                    <div class="info-content">
                        <img src="assets/images/png/gain-weight-min.png" width="30" height="30" alt="وزن هدف">
                        <div class="info-text">
                            <span class="first-line">وزن هدف شما را می‌پرسیم تا برنامه مناسب برای رسیدن به آن را طراحی کنیم.</span>
                            <span class="second-line">لطفاً وزن واقع‌بینانه‌ای را وارد کنید که با قد و ساختار بدنی شما تناسب داشته باشد</span>
                        </div>
                    </div>
                </div>
            </div>
        </div> 
        <div id="goal-weight-display" class="step">
            <div class="step7-image-container">
                <div class="goal-title-container">
                    <h2 class="goal-title" id="goal-title-text">هدف: در حال بارگذاری...</h2>
                </div>
                <div class="weight-display-container">
                    <div class="weight-display-box current-weight">
                        <div class="weight-value">${state.formData.weight || 0}</div>
                        <div class="weight-unit">کیلوگرم</div>
                        <div class="weight-label">وزن فعلی شما</div>
                    </div>
                    <div class="weight-display-box target-weight">
                        <div class="weight-value">${state.formData.targetWeight || 0}</div>
                        <div class="weight-unit">کیلوگرم</div>
                        <div class="weight-label">وزن هدف شما</div>
                    </div>
                </div>
            </div>
        </div>
        <div id="surgery-step" class="step checkbox-step-container">
            <h2>آیا قبلاً جراحی یا عمل خاصی انجام داده‌اید؟</h2>
            
            <!-- بخش "هیچکدام" به صورت جداگانه -->
            <div class="checkbox-container first-option stand-alone-none">
                <input type="checkbox" id="surgery-none" class="real-checkbox">
                <label for="surgery-none" class="checkbox-label">
                    <span class="check-icon"></span>
                    <span class="label-text">خیر</span>
                </label>
            </div>
            
            <div class="separator"></div>
            
            <div id="surgery-selection" class="checkbox-selection-container checkbox-list-container">
                <div class="checkbox-container">
                    <input type="checkbox" id="surgery-kidney" class="real-checkbox">
                    <label for="surgery-kidney" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">پیوند کلیه</span>
                    </label>
                </div>
                <div class="checkbox-container">
                    <input type="checkbox" id="surgery-heart" class="real-checkbox">
                    <label for="surgery-heart" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">پیوند قلب</span>
                    </label>
                </div>
                <div class="checkbox-container">
                    <input type="checkbox" id="surgery-liver" class="real-checkbox">
                    <label for="surgery-liver" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">پیوند کبد</span>
                    </label>
                </div>
                <div class="checkbox-container">
                    <input type="checkbox" id="surgery-metabolic" class="real-checkbox">
                    <label for="surgery-metabolic" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">جراحی متابولیک (مثل بایپس معده، اسلیو معده)</span>
                    </label>
                </div>
                <div class="checkbox-container">
                    <input type="checkbox" id="surgery-intestine" class="real-checkbox">
                    <label for="surgery-intestine" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">جراحی روده (مثل رزکسیون روده، ایلئوستومی)</span>
                    </label>
                </div>
                <div class="checkbox-container">
                    <input type="checkbox" id="surgery-thyroid" class="real-checkbox">
                    <label for="surgery-thyroid" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">جراحی تیروئید/پاراتیروئید</span>
                    </label>
                </div>
                <div class="checkbox-container">
                    <input type="checkbox" id="surgery-gallbladder" class="real-checkbox">
                    <label for="surgery-gallbladder" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">جراحی کیسه صفرا</span>
                    </label>
                </div>
                <div class="checkbox-container">
                    <input type="checkbox" id="surgery-pancreas" class="real-checkbox">
                    <label for="surgery-pancreas" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">جراحی لوزالمعده (پانکراس)</span>
                    </label>
                </div>
                <div class="checkbox-container female-only" style="display: none;">
                    <input type="checkbox" id="surgery-gynecology" class="real-checkbox">
                    <label for="surgery-gynecology" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">جراحی‌های زنان</span>
                    </label>
                </div>                
            </div>
        </div>     
        <div id="hormonal-disorders-step" class="step checkbox-step-container">
            <h2>آیا اختلال هورمونی خاصی دارید؟</h2>
            
            <div class="checkbox-container first-option stand-alone-none-option">
                <input type="checkbox" id="hormonal-none" class="real-checkbox">
                <label for="hormonal-none" class="checkbox-label">
                    <span class="check-icon"></span>
                    <span class="label-text">خیر</span>
                </label>
            </div>
            
            <div class="separator"></div>
            
            <div id="hormonal-selection" class="checkbox-selection-container checkbox-list-container">
                <div class="checkbox-container">
                    <input type="checkbox" id="hormonal-pcos" class="real-checkbox">
                    <label for="hormonal-pcos" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">سندرم تخمدان پلی کیستیک (PCOS)</span>
                    </label>
                </div>
                <div class="checkbox-container">
                    <input type="checkbox" id="hormonal-hypothyroidism" class="real-checkbox">
                    <label for="hormonal-hypothyroidism" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">کم کاری تیروئید</span>
                    </label>
                </div>
                <div class="checkbox-container">
                    <input type="checkbox" id="hormonal-hyperthyroidism" class="real-checkbox">
                    <label for="hormonal-hyperthyroidism" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">پرکاری تیروئید</span>
                    </label>
                </div>
                <div class="checkbox-container">
                    <input type="checkbox" id="hormonal-diabetes" class="real-checkbox">
                    <label for="hormonal-diabetes" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">دیابت نوع 1 یا 2</span>
                    </label>
                </div>
                <div class="checkbox-container">
                    <input type="checkbox" id="hormonal-adrenal" class="real-checkbox">
                    <label for="hormonal-adrenal" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">مشکلات غده فوق کلیوی</span>
                    </label>
                </div>
            </div>
        </div>   
<div id="stomach-discomfort-step" class="step checkbox-step-container">
            <h2>آیا در هفته گذشته ناراحتی معده را تجربه کرده‌اید؟</h2>
            
            <div class="checkbox-container first-option stand-alone-none">
                <input type="checkbox" id="stomach-none" class="real-checkbox">
                <label for="stomach-none" class="checkbox-label">
                    <span class="check-icon"></span>
                    <span class="label-text">خیر</span>
                </label>
            </div>
            
            <div class="separator"></div>
            
            <div id="stomach-selection" class="checkbox-selection-container checkbox-list-container">
                <div class="checkbox-container">
                    <input type="checkbox" id="stomach-bloating" class="real-checkbox">
                    <label for="stomach-bloating" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">نفخ یا گاز معده</span>
                    </label>
                </div>
                <div class="checkbox-container">
                    <input type="checkbox" id="stomach-pain" class="real-checkbox">
                    <label for="stomach-pain" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">درد یا گرفتگی معده</span>
                    </label>
                </div>
                <div class="checkbox-container">
                    <input type="checkbox" id="stomach-heartburn" class="real-checkbox">
                    <label for="stomach-heartburn" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">سوزش سر دل یا ترش کردن</span>
                    </label>
                </div>
                <div class="checkbox-container">
                    <input type="checkbox" id="stomach-nausea" class="real-checkbox">
                    <label for="stomach-nausea" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">حالت تهوع</span>
                    </label>
                </div>
                <div class="checkbox-container">
                    <input type="checkbox" id="stomach-indigestion" class="real-checkbox">
                    <label for="stomach-indigestion" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">سوء هاضمه مزمن</span>
                    </label>
                </div>
            </div>
        </div>   
        <div id="activity-selection-step" class="step">
            <h2>میزان فعالیت روزانه شما چقدر است؟</h2>
            <div id="activity-selection">
                <div class="activity-option" data-activity="very-low">
                    <img src="assets/images/png/without-activity-min.png" alt="فعالیت خیلی کم" width="60" height="30">
                    <span>خیلی کم (کمتر از 1 ساعت)</span>
                </div>
                <div class="activity-option" data-activity="low">
                    <img src="assets/images/png/alittle-activity-min.png" alt="فعالیت کم" width="60" height="30">
                    <span>کم (1 تا 2 ساعت)</span>
                </div>
                <div class="activity-option" data-activity="medium">
                    <img src="assets/images/png/middle-activity-min.png" alt="فعالیت متوسط" width="60" height="30">
                    <span>متوسط (2 تا 4 ساعت)</span>
                </div>
                <div class="activity-option" data-activity="high">
                    <img src="assets/images/png/alot-activity-min.png" alt="فعالیت زیاد" width="60" height="30">
                    <span>زیاد (بیشتر از 4 ساعت)</span>
                </div>
            </div>
        </div>
        <div id="meal-selection-step" class="step">
            <h2>چند وعده غذایی در روز مصرف می‌کنید؟</h2>
            <div id="meal-selection">
                <div class="meal-option" data-meals="2">
                    <img src="assets/images/png/gain-weight-min.png" alt="2 وعده" width="60" height="30">
                    <span>۲ وعده</span>
                </div>
                <div class="meal-option" data-meals="3">
                    <img src="assets/images/png/gain-weight-min.png" alt="3 وعده" width="60" height="30">
                    <span>۳ وعده</span>
                </div>
                <div class="meal-option" data-meals="4">
                    <img src="assets/images/png/gain-weight-min.png" alt="4 وعده" width="60" height="30">
                    <span>۴ وعده</span>
                </div>
                <div class="meal-option" data-meals="more">
                    <img src="assets/images/png/gain-weight-min.png" alt="بیشتر" width="60" height="30">
                    <span>بیشتر</span>
                </div>
                <div class="meal-option" data-meals="irregular">
                    <img src="assets/images/png/gain-weight-min.png" alt="وعده‌های نامنظم" width="60" height="30">
                    <span>وعده‌های نامنظم</span>
                </div>
            </div>
        </div>
        <div id="additional-info-step" class="step">
            <h2>اطلاعات تکمیلی</h2>
            <div id="additional-info-selection">
                <div class="checkbox-container first-option">
                    <input type="checkbox" id="info-none" class="real-checkbox">
                    <label for="info-none" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">هیچکدام از موارد زیر را ندارم</span>
                    </label>
                </div>
                
                <div class="separator"></div>
                
                <div class="checkbox-container">
                    <input type="checkbox" id="info-diabetes" class="real-checkbox">
                    <label for="info-diabetes" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">دیابت</span>
                    </label>
                </div>
                <div class="checkbox-container">
                    <input type="checkbox" id="info-pressure" class="real-checkbox">
                    <label for="info-pressure" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">فشار خون</span>
                    </label>
                </div>
                <div class="checkbox-container">
                    <input type="checkbox" id="info-thyroid" class="real-checkbox">
                    <label for="info-thyroid" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">مشکلات تیروئید</span>
                    </label>
                </div>
                <div class="checkbox-container">
                    <input type="checkbox" id="info-allergy" class="real-checkbox">
                    <label for="info-allergy" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">حساسیت غذایی</span>
                    </label>
                </div>
            </div>
        </div>        
        <div id="food-restriction-step" class="step">
            <h2>آیا محدودیت غذایی خاصی دارید؟</h2>
            <div id="food-restriction-selection" class="checkbox-selection-container">
                <div class="checkbox-container first-option">
                    <input type="checkbox" id="restriction-none" class="real-checkbox">
                    <label for="restriction-none" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">نه، محدودیت ندارم</span>
                    </label>
                </div>
                
                <div class="separator"></div>
                
                <div class="checkbox-container">
                    <input type="checkbox" id="restriction-vegetarian" class="real-checkbox">
                    <label for="restriction-vegetarian" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">گیاهخوار هستم</span>
                    </label>
                </div>
                <div class="checkbox-container">
                    <input type="checkbox" id="restriction-no-seafood" class="real-checkbox">
                    <label for="restriction-no-seafood" class="checkbox-label">
                        <span class="check-icon"></span>
                        <span class="label-text">غذای دریایی نمی‌خورم</span>
                    </label>
                </div>
            </div>
        </div>
        <div id="confirm-submit-step" class="step">
            <h2>خلاصه اطلاعات شما</h2>
            <div id="summary-container"></div>
            <div id="confirmation-checkbox" class="checkbox-container">
                <input type="checkbox" id="confirm-info" class="real-checkbox">
                <label for="confirm-info" class="checkbox-label">
                    <span class="check-icon"></span>
                    <span class="label-text">اطلاعات وارد شده را تأیید می‌کنم</span>
                </label>
            </div>
            <div id="submit-button-container">
                <button type="submit" class="submit-form">ثبت نهایی</button>
            </div>
        </div>   
        <div id="next-button-container">
            <button type="button" class="next-step">گام بعد</button>
        </div>
    </form>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- قبل از بستن تگ body -->
    <script src="assets/js/script.js"></script>
    <script src="assets/js/form-validation.js"></script>
    <script src="assets/js/form-steps.js"></script>
    <script src="assets/js/form-inputs.js"></script>
    <script src="assets/js/form-events.js"></script>
</body>
</html>
-----------------------------------------------------------------------------------------------------
// /home/aidastya/public_html/wp-content/themes/woodmart-child/assets/js/form-events.js
window.handleNextStep = function() {
    if (window.state.currentStep < window.totalSteps) {
        window.navigateToStep(window.state.currentStep + 1);
    }
};

window.preloadImages = function() {
    const images = [
        'assets/images/webp/img_0_de-min.webp',
        'assets/images/png/img_1_de-min.png',
        'assets/images/webp/img_0-min.webp',
        'assets/images/png/img_1-min.png'
    ];
    
    images.forEach(src => {
        const img = new Image();
        img.src = src;
    });
}

window.setupStomachDiscomfortSelection = function(currentStep) {
    try {
        if (currentStep !== STEPS.STOMACH) return;

        const elements = {
            noneCheckbox: document.getElementById('stomach-none'),
            bloating: document.getElementById('stomach-bloating'),
            pain: document.getElementById('stomach-pain'),
            heartburn: document.getElementById('stomach-heartburn'),
            nausea: document.getElementById('stomach-nausea'),
            indigestion: document.getElementById('stomach-indigestion'),
            nextButton: document.querySelector('.next-step')
        };

        if (Object.values(elements).some(el => !el)) {
            console.error('Some required elements for stomach step are missing');
            return;
        }

        elements.nextButton.disabled = true;

        const validateForm = () => {
            const anyChecked = [elements.bloating, elements.pain, elements.heartburn, elements.nausea]
                .some(option => option.checked) || elements.noneCheckbox.checked;
            
            elements.nextButton.disabled = !anyChecked;
            
            const stomachInfo = [];
            if (elements.bloating.checked) stomachInfo.push('bloating');
            if (elements.pain.checked) stomachInfo.push('pain');
            if (elements.heartburn.checked) stomachInfo.push('heartburn');
            if (elements.nausea.checked) stomachInfo.push('nausea');
            if (elements.noneCheckbox.checked) stomachInfo.push('none');
            
            state.updateFormData('stomachDiscomfort', stomachInfo);
        };

        const handleCheckboxChange = (checkbox) => {
            checkbox.addEventListener('change', function() {
                const label = this.nextElementSibling;
                if (label) {
                    label.classList.add('checked-animation');
                    setTimeout(() => {
                        label.classList.remove('checked-animation');
                        label.classList.toggle('checked', this.checked);
                    }, 800);
                }
                validateForm();
            });
        };

        elements.noneCheckbox.addEventListener('change', function() {
            if (this.checked) {
                [elements.bloating, elements.pain, elements.heartburn, elements.nausea].forEach(option => {
                    option.checked = false;
                    const label = option.nextElementSibling;
                    if (label) label.classList.remove('checked');
                });
            }
            validateForm();
        });

        [elements.bloating, elements.pain, elements.heartburn, elements.nausea].forEach(option => {
            handleCheckboxChange(option);
            option.addEventListener('change', function() {
                if (this.checked) {
                    elements.noneCheckbox.checked = false;
                    const label = elements.noneCheckbox.nextElementSibling;
                    if (label) label.classList.remove('checked');
                }
                validateForm();
            });
        });

        validateForm();
    } catch (error) {
        console.error('Error in stomach discomfort step:', error);
    }
};

window.setupHormonalSelection = function(currentStep) {
    const checkboxes = document.querySelectorAll('#hormonal-selection .real-checkbox, #hormonal-none');
    const nextButton = document.querySelector('.next-step');
    const noneCheckbox = document.getElementById('hormonal-none');
    const hormonalOptions = document.querySelectorAll('#hormonal-selection .real-checkbox');
    
    if (currentStep !== STEPS.HORMONAL) return;

    nextButton.disabled = true;

    const validateForm = () => {
        const anyChecked = Array.from(checkboxes).some(cb => cb.checked);
        nextButton.disabled = !anyChecked;
        
        const hormonalInfo = [];
        if (document.getElementById('hormonal-pcos').checked) hormonalInfo.push('pcos');
        if (document.getElementById('hormonal-hypothyroidism').checked) hormonalInfo.push('hypothyroidism');
        if (document.getElementById('hormonal-hyperthyroidism').checked) hormonalInfo.push('hyperthyroidism');
        if (document.getElementById('hormonal-diabetes').checked) hormonalInfo.push('diabetes');
        if (document.getElementById('hormonal-adrenal').checked) hormonalInfo.push('adrenal');
        if (noneCheckbox.checked) hormonalInfo.push('none');
        
        state.updateFormData('hormonal', hormonalInfo);
    };

    noneCheckbox.addEventListener('change', function() {
        if (this.checked) {
            hormonalOptions.forEach(option => {
                option.checked = false;
                option.nextElementSibling.classList.remove('checked');
            });
            
            const label = this.nextElementSibling;
            label.classList.add('checked-animation');
            setTimeout(() => {
                label.classList.remove('checked-animation');
                label.classList.add('checked');
            }, 800);
        }
        validateForm();
    });

    hormonalOptions.forEach(option => {
        option.addEventListener('change', function() {
            if (this.checked) {
                noneCheckbox.checked = false;
                noneCheckbox.nextElementSibling.classList.remove('checked');
                
                const label = this.nextElementSibling;
                label.classList.add('checked-animation');
                setTimeout(() => {
                    label.classList.remove('checked-animation');
                    label.classList.add('checked');
                }, 800);
            }
            validateForm();
        });
    });

    validateForm();
}

window.setupSurgerySelection = function(currentStep) {
    const checkboxes = document.querySelectorAll('#surgery-selection .real-checkbox, #surgery-none');
    const nextButton = document.querySelector('.next-step');
    const noneCheckbox = document.getElementById('surgery-none');
    const surgeryOptions = document.querySelectorAll('#surgery-selection .real-checkbox');
    
    if (currentStep !== STEPS.SURGERY) return;

    const femaleOnlyOptions = document.querySelectorAll('.female-only');
    if (state.formData.gender === 'female') {
        femaleOnlyOptions.forEach(option => option.style.display = 'block');
    } else {
        femaleOnlyOptions.forEach(option => {
            option.style.display = 'none';
            const checkbox = option.querySelector('.real-checkbox');
            if (checkbox) checkbox.checked = false;
        });
    }
    
    nextButton.disabled = true;

    const validateForm = () => {
        const anyChecked = Array.from(checkboxes).some(cb => cb.checked);
        nextButton.disabled = !anyChecked;
        
        const surgeryInfo = [];
        if (document.getElementById('surgery-kidney').checked) surgeryInfo.push('kidney');
        if (document.getElementById('surgery-heart').checked) surgeryInfo.push('heart');
        if (document.getElementById('surgery-liver').checked) surgeryInfo.push('liver');
        if (document.getElementById('surgery-metabolic').checked) surgeryInfo.push('metabolic');
        if (document.getElementById('surgery-intestine').checked) surgeryInfo.push('intestine');
        if (document.getElementById('surgery-thyroid').checked) surgeryInfo.push('thyroid');
        if (document.getElementById('surgery-gallbladder').checked) surgeryInfo.push('gallbladder');
        if (document.getElementById('surgery-pancreas').checked) surgeryInfo.push('pancreas');
        if (document.getElementById('surgery-gynecology').checked) surgeryInfo.push('gynecology');
        if (noneCheckbox.checked) surgeryInfo.push('none');
        
        state.updateFormData('surgery', surgeryInfo);
    };

    noneCheckbox.addEventListener('change', function() {
        if (this.checked) {
            surgeryOptions.forEach(option => {
                option.checked = false;
                option.nextElementSibling.classList.remove('checked');
            });
            
            const label = this.nextElementSibling;
            label.classList.add('checked-animation');
            setTimeout(() => {
                label.classList.remove('checked-animation');
                label.classList.add('checked');
            }, 800);
        }
        validateForm();
    });

    surgeryOptions.forEach(option => {
        option.addEventListener('change', function() {
            if (this.checked) {
                // اگر گزینه‌ای غیر از "هیچکدام" انتخاب شد
                noneCheckbox.checked = false;
                noneCheckbox.nextElementSibling.classList.remove('checked');
                
                // اعمال افکت روی گزینه انتخاب شده
                const label = this.nextElementSibling;
                label.classList.add('checked-animation');
                setTimeout(() => {
                    label.classList.remove('checked-animation');
                    label.classList.add('checked');
                }, 800);
            }
            validateForm();
        });
    });

    validateForm();
}

window.setupAdditionalInfoSelection = function(currentStep) {
    const checkboxes = document.querySelectorAll('#additional-info-selection .real-checkbox');
    const nextButton = document.querySelector('.next-step');
    const noneCheckbox = document.getElementById('info-none');
    
    if (currentStep !== STEPS.ADDITIONAL_INFO) return;

    nextButton.disabled = true;

    const validateForm = () => {
        const anyChecked = Array.from(checkboxes).some(cb => cb.checked);
        nextButton.disabled = !anyChecked;
        
        const additionalInfo = [];
        if (document.getElementById('info-diabetes').checked) additionalInfo.push('diabetes');
        if (document.getElementById('info-pressure').checked) additionalInfo.push('pressure');
        if (document.getElementById('info-thyroid').checked) additionalInfo.push('thyroid');
        if (document.getElementById('info-allergy').checked) additionalInfo.push('allergy');
        if (document.getElementById('info-none').checked) additionalInfo.push('none');
        
        state.updateFormData('additionalInfo', additionalInfo);
    };

    checkboxes.forEach(checkbox => {
        const handleCheckboxChange = function() {
            if (this === noneCheckbox && this.checked) {
                checkboxes.forEach(cb => {
                    if (cb !== noneCheckbox) {
                        cb.checked = false;
                        cb.nextElementSibling.classList.remove('checked');
                    }
                });
            } else if (this.checked) {
                noneCheckbox.checked = false;
                noneCheckbox.nextElementSibling.classList.remove('checked');
            }
            
            const label = this.nextElementSibling;
            label.classList.add('checked-animation');
            
            setTimeout(() => {
                label.classList.remove('checked-animation');
                if (this.checked) {
                    label.classList.add('checked');
                } else {
                    label.classList.remove('checked');
                }
            }, 800);
            
            validateForm();
        };
        
        checkbox.addEventListener('change', handleCheckboxChange);
    });

    validateForm();
}

window.setupFoodRestrictionSelection = function(currentStep) {
    const checkboxes = document.querySelectorAll('#food-restriction-selection .real-checkbox');
    const nextButton = document.querySelector('.next-step');
    const noneCheckbox = document.getElementById('restriction-none');
    
    if (currentStep !== STEPS.FOOD_RESTRICTIONS) return;

    nextButton.disabled = true;

    const validateForm = () => {
        const anyChecked = Array.from(checkboxes).some(cb => cb.checked);
        nextButton.disabled = !anyChecked;
        
        const foodRestrictions = [];
        if (document.getElementById('restriction-vegetarian').checked) foodRestrictions.push('vegetarian');
        if (document.getElementById('restriction-no-seafood').checked) foodRestrictions.push('no-seafood');
        if (document.getElementById('restriction-none').checked) foodRestrictions.push('none');
        
        state.updateFormData('foodRestrictions', foodRestrictions);
    };

    checkboxes.forEach(checkbox => {
        const handleCheckboxChange = function() {
            if (this === noneCheckbox && this.checked) {
                checkboxes.forEach(cb => {
                    if (cb !== noneCheckbox) {
                        cb.checked = false;
                        cb.nextElementSibling.classList.remove('checked');
                    }
                });
            } else if (this.checked) {
                noneCheckbox.checked = false;
                noneCheckbox.nextElementSibling.classList.remove('checked');
            }
            
            const label = this.nextElementSibling;
            label.classList.add('checked-animation');
            
            setTimeout(() => {
                label.classList.remove('checked-animation');
                if (this.checked) {
                    label.classList.add('checked');
                } else {
                    label.classList.remove('checked');
                }
            }, 800);
            
            validateForm();
        };
        
        checkbox.addEventListener('change', handleCheckboxChange);
    });

    validateForm();
}

window.setupConfirmationCheckbox = function(currentStep) {
    const submitButton = document.querySelector(".submit-form");
    const confirmCheckbox = document.getElementById("confirm-info");
    
    if (currentStep !== STEPS.CONFIRMATION) return;

    submitButton.disabled = !confirmCheckbox.checked;
    if (confirmCheckbox.checked) {
        confirmCheckbox.nextElementSibling.classList.add("checked");
    }

    const validateForm = () => {
        submitButton.disabled = !confirmCheckbox.checked;
    };

    confirmCheckbox.addEventListener("change", function() {
        const label = this.nextElementSibling;
        
        if (this.checked) {
            label.classList.add("checked-animation");
            setTimeout(() => {
                label.classList.remove("checked-animation");
                label.classList.add("checked");
            }, 800);
        } else {
            label.classList.remove("checked");
        }
        
        validateForm();
    });

    validateForm();
}
window.handleFormSubmit = function(event) {
    event.preventDefault();
    
    // 1. جمع‌آوری ساختارمند تمام داده‌ها
    const formData = {
        ...state.formData,
        // اطلاعات پایه
        gender: state.formData.gender,
        age: state.formData.age,
        height: state.formData.height,
        weight: state.formData.weight,
        targetWeight: state.formData.targetWeight,
        goal: state.formData.goal,
        activity: state.formData.activity,
        meals: state.formData.meals,
        
        // اطلاعات پزشکی
        surgery: state.formData.surgery || [],
        hormonal: state.formData.hormonal || [],
        stomachDiscomfort: state.formData.stomachDiscomfort || [],
        
        // اطلاعات تکمیلی (به صورت جداگانه)
        diabetes: state.formData.additionalInfo?.includes('diabetes') || false,
        pressure: state.formData.additionalInfo?.includes('pressure') || false,
        thyroid: state.formData.additionalInfo?.includes('thyroid') || false,
        allergy: state.formData.additionalInfo?.includes('allergy') || false,
        vegetarian: state.formData.foodRestrictions?.includes('vegetarian') || false,
        noSeafood: state.formData.foodRestrictions?.includes('no-seafood') || false,
        
    };

    console.log('Form submitted:', formData);
};

window.showSummary = function() {
    const summaryContainer = document.getElementById('summary-container');
    const nextButton = document.querySelector('.next-step');
    const confirmCheckbox = document.getElementById('confirm-info');
    
    nextButton.disabled = true;
    
    confirmCheckbox.addEventListener('change', function() {
        nextButton.disabled = !this.checked;
    });

    const { 
        gender, age, height, weight, targetWeight, goal, 
        activity, meals, additionalInfo = [], 
        foodRestrictions = [], surgery = [], hormonal = [],
        stomachDiscomfort = []
    } = state.formData;
    const goalText = { "weight-loss": "کاهش وزن", "weight-gain": "افزایش وزن", "fitness": "تناسب اندام"}[goal];
    const activityText = { "very-low": "خیلی کم (کمتر از 1 ساعت)", "low": "کم (1 تا 2 ساعت)", "medium": "متوسط (2 تا 4 ساعت)", "high": "زیاد (بیشتر از 4 ساعت)" }[activity];
        const mealsText = { 
        "2": "۲ وعده", 
        "3": "۳ وعده", 
        "4": "۴ وعده", 
        "more": "بیشتر",
        "irregular": "وعده‌های نامنظم" 
    }[meals];
    
    // const { hormonal = [] } = state.formData;
    
    const hormonalText = [];
    if (hormonal.includes('pcos')) hormonalText.push('سندرم تخمدان پلی کیستیک');
    if (hormonal.includes('hypothyroidism')) hormonalText.push('کم کاری تیروئید');
    if (hormonal.includes('hyperthyroidism')) hormonalText.push('پرکاری تیروئید');
    if (hormonal.includes('diabetes')) hormonalText.push('دیابت');
    if (hormonal.includes('adrenal')) hormonalText.push('مشکلات غده فوق کلیوی');
    if (hormonal.includes('none')) hormonalText.push('هیچکدام');
    
    const additionalInfoText = additionalInfo.map(item => {
        switch(item) {
            case 'diabetes': return 'دیابت';
            case 'pressure': return 'فشار خون';
            case 'thyroid': return 'مشکلات تیروئید';
            case 'allergy': return 'حساسیت غذایی';
            case 'none': return 'هیچکدام';
            default: return item;
        }
    });
    
    const foodRestrictionsText = foodRestrictions.map(item => {
        switch(item) {
            case 'vegetarian': return 'گیاهخواری';
            case 'no-seafood': return 'عدم مصرف غذای دریایی';
            case 'none': return 'بدون محدودیت';
            default: return item;
        }
    });
    
    const stomachDiscomfortText = stomachDiscomfort.map(item => {
        switch(item) {
            case 'bloating': return 'نفخ یا گاز معده';
            case 'pain': return 'درد یا گرفتگی معده';
            case 'heartburn': return 'سوزش سر دل';
            case 'nausea': return 'حالت تهوع';
            case 'indigestion': return 'سوء هاضمه مزمن';
            case 'none': return 'هیچکدام';
            default: return item;
        }
    });
    
    const surgeryText = [];
    if (surgery.includes('kidney')) surgeryText.push('پیوند کلیه');
    if (surgery.includes('heart')) surgeryText.push('پیوند قلب');
    if (surgery.includes('liver')) surgeryText.push('پیوند کبد');
    if (surgery.includes('metabolic')) surgeryText.push('جراحی متابولیک');
    if (surgery.includes('intestine')) surgeryText.push('جراحی روده');
    if (surgery.includes('thyroid')) surgeryText.push('جراحی تیروئید');
    if (surgery.includes('gallbladder')) surgeryText.push('جراحی کیسه صفرا');
    if (surgery.includes('pancreas')) surgeryText.push('جراحی لوزالمعده');
    if (surgery.includes('gynecology')) surgeryText.push('جراحی‌های زنان');
    if (surgery.includes('none')) surgeryText.push('هیچکدام');
    
    summaryContainer.innerHTML = `
        <div class="summary-item">
            <span class="summary-label">جنسیت:</span>
            <span class="summary-value">${gender === "male" ? "مرد" : "زن"}</span>
        </div>
        <div class="summary-item">
            <span class="summary-label">سن:</span>
            <span class="summary-value">${age} سال</span>
        </div>
        <div class="summary-item">
            <span class="summary-label">قد:</span>
            <span class="summary-value">${height} سانتی‌متر</span>
        </div>
        <div class="summary-item">
            <span class="summary-label">وزن فعلی:</span>
            <span class="summary-value">${weight} کیلوگرم</span>
        </div>
        <div class="summary-item">
            <span class="summary-label">وزن هدف:</span>
            <span class="summary-value">${targetWeight || 'ثبت نشده'} کیلوگرم</span>
        </div>
        <div class="summary-item">
            <span class="summary-label">هدف:</span>
            <span class="summary-value">${goalText}</span>
        </div>
        <div class="summary-item">
            <span class="summary-label">سابقه جراحی:</span>
            <span class="summary-value">${surgeryText.join('، ') || 'ثبت نشده'}</span>
        </div>  
        <div class="summary-item">
            <span class="summary-label">اختلالات هورمونی:</span>
            <span class="summary-value">${hormonalText.join('، ') || 'ثبت نشده'}</span>
        </div>    
        <div class="summary-item">
            <span class="summary-label">علائم معده:</span>
            <span class="summary-value">${stomachDiscomfortText.join('، ') || 'ثبت نشده'}</span>
        </div>        
        <div class="summary-item">
            <span class="summary-label">فعالیت روزانه:</span>
            <span class="summary-value">${activityText}</span>
        </div>
        <div class="summary-item">
            <span class="summary-label">تعداد وعده‌های غذایی:</span>
            <span class="summary-value">${mealsText}</span>
        </div>
        <div class="summary-item">
            <span class="summary-label">اطلاعات تکمیلی:</span>
            <span class="summary-value">${additionalInfoText.join('، ') || 'ثبت نشده'}</span>
        </div>
        <div class="summary-item">
            <span class="summary-label">محدودیت‌های غذایی:</span>
            <span class="summary-value">${foodRestrictionsText.join('، ') || 'ثبت نشده'}</span>
        </div>
    `;
}

// Initialize event listeners
window.addEventListener('load', preloadImages);

document.addEventListener("DOMContentLoaded", () => {
    const confirmCheckbox = document.getElementById("confirm-terms");
    const genderOptions = document.querySelectorAll(".gender-option");
    
    const updateGenderOptionsState = () => {
        genderOptions.forEach(option => {
            if (confirmCheckbox.checked) {
                option.style.opacity = "1";
                option.style.pointerEvents = "auto";
                option.style.filter = "none";
            } else {
                option.style.opacity = "0.5";
                option.style.pointerEvents = "none";
                option.style.filter = "grayscale(80%)";
            }
        });
    };
    
    confirmCheckbox.addEventListener("change", updateGenderOptionsState);
    updateGenderOptionsState();
    
    navigateToStep(state.currentStep);
    document.querySelector(".next-step").addEventListener("click", handleNextStep);
    document.getElementById("back-button").addEventListener("click", handleBackStep);
    document.getElementById("multi-step-form").addEventListener("submit", handleFormSubmit);
    window.addEventListener("popstate", (event) => {
        if (event.state?.step) state.updateStep(event.state.step);
        else navigateToStep(1);
    });

    setupInput("age-input", "age-display", "age");
    setupInput("height-input", "height-display", "height");
    setupInput("weight-input", "weight-display", "weight");
    setupInput("target-weight-input", "target-weight-display", "targetWeight");

    setupOptionSelection(".gender-option", "gender");
    setupOptionSelection(".goal-option", "goal");
    setupOptionSelection(".activity-option", "activity");
    setupOptionSelection(".meal-option", "meals");

    document.addEventListener("keydown", handleEnterKey);
});
-----------------------------------------------------------------------------------------------------
// /home/aidastya/public_html/wp-content/themes/woodmart-child/assets/js/form-inputs.js
window.setupInput = function(inputId, displayId, field) {
    const input = document.getElementById(inputId);
    const display = document.getElementById(displayId);
    const nextButton = document.querySelector(".next-step");

    if (nextButton) nextButton.disabled = true;

    const updateDisplay = (value) => {
        display.textContent = value ? `${value} ${field === "age" ? "سال" : field === "height" ? "سانتی‌متر" : "کیلوگرم"}` : `0 ${field === "age" ? "سال" : field === "height" ? "سانتی‌متر" : "کیلوگرم"}`;
        display.style.color = value ? "#000" : "#999";
        state.updateFormData(field, value ? parseInt(value) : null);
        
        if (field === "weight" && state.formData.height && value) {
            calculateBMI(state.formData.height, parseInt(value));
        }
    };

    input.addEventListener("input", () => {
        let value = input.value.replace(/\D/g, "");
        if (field === "age" && value.length > 2) value = value.slice(0, 2);
        else if ((field === "height" || field === "weight") && value.length > 3) value = value.slice(0, 3);
        input.value = value;
        updateDisplay(value);
        if (input.type === "text") setTimeout(() => input.setSelectionRange(value.length, value.length), 0);
        validateStep(state.currentStep);
    });

    input.addEventListener("click", () => {
        const value = input.value.replace(/\D/g, "");
        if (input.type === "text") input.setSelectionRange(value.length, value.length);
    });

    input.addEventListener("blur", () => {
        const value = input.value.trim();
        if (!value) updateDisplay("");
        validateStep(state.currentStep);
    });
}

window.setupOptionSelection = function(selector, key) {
    document.querySelectorAll(selector).forEach(el => {
        el.addEventListener("click", () => {
            const confirmCheckbox = document.getElementById("confirm-terms");
            if (!confirmCheckbox.checked) {
                alert("لطفاً ابتدا شرایط استفاده را تأیید کنید");
                return;
            }

            document.querySelectorAll(selector).forEach(opt => {
                opt.classList.remove("selected");
                opt.style.transform = "";
                opt.style.boxShadow = "";
            });
            
            el.classList.add("selected");
            el.classList.add("selected-with-effect");
            
            setTimeout(() => {
                el.classList.remove("selected-with-effect");
                state.updateFormData(key, el.dataset[key]);
                
                el.style.transform = "translateY(-3px)";
                el.style.boxShadow = "0 10px 20px rgba(0, 133, 122, 0.2)";
                
                setTimeout(() => {
                    navigateToStep(state.currentStep + 1);
                }, 250);
            }, 150);
        });
    });
}
-----------------------------------------------------------------------------------------------------
// /home/aidastya/public_html/wp-content/themes/woodmart-child/assets/js/form-steps.js
window.showStep = function(step) {
    const stepElements = [
        "gender-selection-step",
        "goal-selection-step",
        "age-input-step", 
        "height-input-step",
        "weight-input-step",
        "target-weight-step",
        "goal-weight-display",
        "surgery-step",
        "hormonal-disorders-step",
        "stomach-discomfort-step",
        "activity-selection-step",
        "meal-selection-step",
        "additional-info-step",
        "food-restriction-step",
        "confirm-submit-step"
    ];
    
    document.querySelectorAll(".step").forEach(el => {
        el.classList.remove("active");
        if (el.id === "goal-weight-display") {
            el.style.display = 'none';
            if (!el.classList.contains("active")) {
                el.querySelector('.step7-image-container').innerHTML = '';
            }
        }
    });
    
    const currentStepElement = document.getElementById(stepElements[step - 1]);
    if (currentStepElement) {
        currentStepElement.classList.add("active");
        if (currentStepElement.id === "goal-weight-display") {
            currentStepElement.style.display = 'flex';
        }
    }

    if (step === STEPS.GOAL_DISPLAY) {
        const goalTitleElement = document.getElementById('goal-title-text');
        if (goalTitleElement) {
            const goalText = {
                "weight-loss": "هدف: کاهش وزن",
                "weight-gain": "هدف: افزایش وزن", 
                "fitness": "هدف: تناسب اندام"
            }[state.formData.goal];
            
            goalTitleElement.textContent = goalText || "هدف: مشخص نشده";
        }
    
        const imageContainer = document.querySelector('#goal-weight-display .step7-image-container');
        let svgFile = '';
        
        if (state.formData.goal === 'weight-loss') {
            svgFile = 'assets/images/svg/weight-loss.svg';
        } else if (state.formData.goal === 'weight-gain' || state.formData.goal === 'fitness') {
            svgFile = 'assets/images/svg/weight-gain.svg';
        }
        
        imageContainer.innerHTML = `
            <div class="goal-title-container">
                <h2 class="goal-title" id="goal-title-text">
                    ${state.formData.goal === 'weight-loss' ? 'کاهش وزن' : 
                      state.formData.goal === 'weight-gain' ? 'افزایش وزن' : 
                      'تناسب اندام'}
                </h2>
            </div>
            <object type="image/svg+xml" data="${svgFile}" class="goal-svg"></object>
            <div class="weight-display-container">
                <div class="weight-display-box target-weight">
                    <div class="weight-value">${state.formData.targetWeight || 0}</div>
                    <div class="weight-unit">کیلوگرم</div>
                    <div class="weight-label">وزن هدف</div>
                </div>
                <div class="weight-display-box current-weight">
                    <div class="weight-value">${state.formData.weight || 0}</div>
                    <div class="weight-unit">کیلوگرم</div>
                    <div class="weight-label">وزن فعلی</div>
                </div>
            </div>
        `;
    }
    
    const nextButtonContainer = document.getElementById("next-button-container");
    if (nextButtonContainer) nextButtonContainer.style.display = [STEPS.GENDER, STEPS.GOAL, STEPS.ACTIVITY, STEPS.MEALS].includes(step) ? "none" : "block";

    if ([STEPS.AGE, STEPS.HEIGHT, STEPS.WEIGHT, STEPS.TARGET_WEIGHT].includes(step)) {
        const inputId = `${["age", "height", "weight", "target-weight"][step - 3]}-input`;
        const inputElement = document.getElementById(inputId);
        if (inputElement) inputElement.focus();
        
        const nextButton = document.querySelector(".next-step");
        if (nextButton) nextButton.disabled = true;
        
        validateStep(step);
    }
    
    if (step === STEPS.STOMACH) {
        setupStomachDiscomfortSelection(step);
    } else if (step === STEPS.HORMONAL) {
        setupHormonalSelection(step);
    } else if (step === STEPS.SURGERY) {
        setupSurgerySelection(step);
    } else if (step === STEPS.ADDITIONAL_INFO) {
        setupAdditionalInfoSelection(step);
    } else if (step === STEPS.FOOD_RESTRICTIONS) {
        setupFoodRestrictionSelection(step);
    } else if (step === STEPS.CONFIRMATION) {
        showSummary();
        setupConfirmationCheckbox(step);
        document.getElementById("next-button-container").style.display = "none";
        document.getElementById("submit-button-container").style.display = "block";
        
        const confirmCheckbox = document.getElementById("confirm-info");
        const submitButton = document.querySelector(".submit-form");
        if (submitButton) {
            submitButton.disabled = !confirmCheckbox.checked;
        }
    }
}

window.updateStepCounter = function(step) {
    document.getElementById("current-step").textContent = step;
    document.getElementById("total-steps").textContent = totalSteps;
}

window.updateProgressBar = function(step) {
    const progress = ((step - 1) / (totalSteps - 1)) * 100;
    document.getElementById("progress-bar").style.width = `${progress}%`;
}

window.navigateToStep = function(step) {
    if (step >= 1 && step <= totalSteps) {
        state.updateStep(step);
        history.pushState({ step: state.currentStep }, "", `#step-${state.currentStep}`);
    }
}

window.handleNextStep = function() {
    if (state.currentStep < totalSteps) navigateToStep(state.currentStep + 1);
}

window.handleBackStep = function() {
    if (state.currentStep > 1) navigateToStep(state.currentStep - 1);
}

window.handleEnterKey = function(event) {
    if (event.key === "Enter" && event.target.matches("input[type='text']")) {
        event.preventDefault();
        document.querySelector(".next-step").click();
    }
}
-----------------------------------------------------------------------------------------------------
// /home/aidastya/public_html/wp-content/themes/woodmart-child/assets/js/form-validation.js
window.validateStep = function(step) {
    const nextButton = document.querySelector(".next-step");
    const errorMessages = {
        [STEPS.AGE]: { 
            field: "age", 
            min: CONSTANTS.MIN_AGE, 
            max: CONSTANTS.MAX_AGE, 
            unit: "سال", 
            label: "سن", 
            errorId: "age-error" 
        },
        [STEPS.HEIGHT]: { 
            field: "height", 
            min: CONSTANTS.MIN_HEIGHT, 
            max: CONSTANTS.MAX_HEIGHT, 
            unit: "سانتی‌متر", 
            label: "قد", 
            errorId: "height-error" 
        },
        [STEPS.WEIGHT]: { 
            field: "weight", 
            min: CONSTANTS.MIN_WEIGHT, 
            max: CONSTANTS.MAX_WEIGHT, 
            unit: "کیلوگرم", 
            label: "وزن", 
            errorId: "weight-error" 
        },
        [STEPS.TARGET_WEIGHT]: { 
            field: "targetWeight", 
            min: CONSTANTS.MIN_WEIGHT, 
            max: CONSTANTS.MAX_WEIGHT, 
            unit: "کیلوگرم", 
            label: "وزن هدف", 
            errorId: "targetWeight-error",
            customValidation: (value) => {
                const currentWeight = state.formData.weight;
                const goal = state.formData.goal;
                
                if (!currentWeight) return true;
                
                if (goal === "weight-loss" && value >= currentWeight) {
                    return `برای کاهش وزن، وزن هدف باید کمتر از وزن فعلی (${currentWeight} کیلوگرم) باشد`;
                }
                
                if (goal === "weight-gain" && value <= currentWeight) {
                    return `برای افزایش وزن، وزن هدف باید بیشتر از وزن فعلی (${currentWeight} کیلوگرم) باشد`;
                }
                
                if (goal === "fitness" && Math.abs(value - currentWeight) > 20) {
                    return `برای تناسب اندام، وزن هدف باید حداکثر ۲۰ کیلوگرم با وزن فعلی تفاوت داشته باشد`;
                }
                
                return true;
            }
        }
    };
    
    if (errorMessages[step]) {
        const { field, min, max, unit, label, errorId, customValidation } = errorMessages[step];
        const value = state.formData[field];
        const errorElement = document.getElementById(errorId);
        
        if (!errorElement) return;

        if (value === undefined || value === null || value === "") {
            errorElement.textContent = "";
            errorElement.classList.remove("valid");
            if (nextButton) nextButton.disabled = true;
            return;
        }
        
        if (value < min || value > max) {
            errorElement.textContent = `${label} باید بین ${min} تا ${max} ${unit} وارد شود`;
            errorElement.classList.remove("valid");
            if (nextButton) nextButton.disabled = true;
            return;
        }
        
        if (step === 6 && customValidation) {
            const validationResult = customValidation(value);
            if (validationResult !== true) {
                errorElement.textContent = validationResult;
                errorElement.classList.remove("valid");
                if (nextButton) nextButton.disabled = true;
                return;
            }
        }
        
        errorElement.innerHTML = `<span class="tick-icon"></span> مقدار وارد شده معتبر است.`;
        errorElement.classList.add("valid");
        if (nextButton) nextButton.disabled = false;
    }
}

window.calculateBMI = function(height, weight) {
    const heightInMeters = height / 100;
    const bmiValue = document.getElementById('bmi-value');
    const bmiCategory = document.getElementById('bmi-category');
    const bmiIndicator = document.getElementById('bmi-indicator');
    const bmiContainer = document.getElementById('bmi-result-container');
    
    if (!weight || weight === 0) {
        bmiContainer.style.opacity = '0.5';
        bmiIndicator.style.display = 'none';
        bmiValue.textContent = '0';
        bmiCategory.textContent = '';
        return;
    } else {
        bmiContainer.style.opacity = '1';
        bmiIndicator.style.display = 'block';
    }
    
    const bmi = (weight / (heightInMeters * heightInMeters)).toFixed(1);
    bmiValue.textContent = bmi;
    
    const categories = [
        { max: 18.5, text: 'کمبود وزن', color: '#4fc3f7' },
        { max: 25, text: 'وزن نرمال', color: '#66bb6a' },
        { max: 30, text: 'اضافه وزن', color: '#ffee58' },
        { max: 35, text: 'چاق', color: '#ffa726' },
        { max: Infinity, text: 'چاقی شدید', color: '#ef5350' }
    ];
    
    const category = categories.find(c => bmi < c.max);
    bmiCategory.textContent = category.text;
    bmiCategory.style.color = category.color;
    
    let position;
    if (bmi < 18.5) {
        position = (bmi / 18.5) * 20;
    } else if (bmi < 25) {
        position = 20 + ((bmi - 18.5) / 6.5) * 20;
    } else if (bmi < 30) {
        position = 40 + ((bmi - 25) / 5) * 20;
    } else if (bmi < 35) {
        position = 60 + ((bmi - 30) / 5) * 20;
    } else {
        position = 80 + ((Math.min(bmi, 50) - 35) / 15) * 20;
    }
    
    bmiIndicator.classList.add('animate-indicator');
    setTimeout(() => {
        bmiIndicator.style.left = `${Math.min(position, 100)}%`;
        bmiIndicator.style.transform = 'translateX(-50%)';
    }, 10);
    
    setTimeout(() => {
        bmiIndicator.classList.remove('animate-indicator');
    }, 800);
}
-----------------------------------------------------------------------------------------------------
// /home/aidastya/public_html/wp-content/themes/woodmart-child/assets/js/script.js
window.state = {
    currentStep: 1,
    formData: {},
    updateStep(step) {
        this.currentStep = step;
        window.showStep(step);
        window.updateStepCounter(step);
        window.updateProgressBar(step);
    },
    updateFormData(key, value) {
        this.formData[key] = value;
        window.validateStep(this.currentStep);
    }
};

window.CONSTANTS = {
    MIN_AGE: 18,
    MAX_AGE: 80,
    MIN_HEIGHT: 90,
    MAX_HEIGHT: 250,
    MIN_WEIGHT: 35,
    MAX_WEIGHT: 180
};

window.STEPS = {
    GENDER: 1,
    GOAL: 2,
    AGE: 3,
    HEIGHT: 4,
    WEIGHT: 5,
    TARGET_WEIGHT: 6,
    GOAL_DISPLAY: 7,
    SURGERY: 8,
    HORMONAL: 9, 
    STOMACH: 10,
    ACTIVITY: 11,
    MEALS: 12,
    ADDITIONAL_INFO: 13,
    FOOD_RESTRICTIONS: 14,
    CONFIRMATION: 15
};

window.totalSteps = Object.keys(STEPS).length;
-----------------------------------------------------------------------------------------------------
/*/home/aidastya/public_html/wp-content/themes/woodmart-child/assets/css/style.css*/
@font-face {
    font-family: Vazir;
    src: url('../fonts/Vazir.woff2') format('woff2'),
         url('../fonts/Vazir.woff') format('woff');
    font-weight: normal;
    font-style: normal;
}

@font-face {
    font-family: BordeauxBlack;
    src: url('../fonts/BordeauxBlack.woff2') format('woff2'),
         url('../fonts/BordeauxBlack.woff') format('woff');
    font-weight: normal;
    font-style: normal;
}

:root {
    --primary-color: #00857a;
    --secondary-color: #00665c;
    --background-color: #f5f5f5;
    --text-color: #333;
    --border-color: #e0e0e0;
    --error-background: #e6f3ff;
    --error-border: #b3d7ff;
    --valid-background: #e6f4ea;
    --valid-border: #34c759;
    --valid-text: #2e7d32;
    --input-focus-bg: #e0f2f1;
    --input-focus-border: #00857a;
    --option-bg: #f0faf9;
    --option-selected-bg: #FFF7DF;
    --option-selected-border: #EEB600;
    --button-bg: #97e0db;
    --button-hover-bg: #00665c;
    --button-text: #fff;
    --progress-bar-bg: #e0e0e0;
    --progress-bar-fill: #F4C017;
    --orange-color: #FFA500;
    --orange-shadow: rgba(255, 165, 0, 0.3);
    --orange-light-shadow: rgba(255, 165, 0, 0.15);
    --white-color: #fff;
    --shadow-color: rgba(0, 0, 0, 0.05);
    --light-shadow: rgba(0, 0, 0, 0.1);
    --pulse-glow: rgba(0, 133, 122, 0.4);
    --transparent: transparent;
}

body {
    font-family: Vazir, Tahoma, sans-serif;
    background-color: var(--background-color);
    color: var(--text-color);
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    overflow: hidden;
    direction: rtl;
}

#multi-step-form {
    width: 100%;
    max-width: 500px;
    height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 20px;
    background: var(--white-color);
    position: relative;
    overflow: hidden;
    justify-content: flex-start;
    padding-top: 60px;
    margin: 0 auto;
}

#header-container {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    width: 100%;
    max-width: 1032px;
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
    align-items: center;
    z-index: 1;
    background: var(--white-color);
    padding: 10px 20px;
    box-sizing: border-box;
}

#step-counter {
    font-size: 14px;
    font-weight: 300;
    color: var(--text-color);
}

#current-step {
    color: var(--primary-color);
}

#header-container::before {
    content: "AiDASTYAR";
    font-family: BordeauxBlack, sans-serif;
    font-size: 24px;
    color: var(--primary-color);
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
}

#back-button {
    background: none;
    border: none;
    font-size: 30px;
    color: var(--primary-color);
    cursor: pointer;
    padding: 0;
}

#back-button:hover {
    color: var(--secondary-color);
}

#progress-bar-container {
    position: fixed;
    top: 60px;
    left: 0;
    right: 0;
    width: calc(100% - 40px);
    max-width: 1032px;
    height: 4px;
    margin: 0 auto;
    background-color: var(--progress-bar-bg);
    border-radius: 3px;
    overflow: hidden;
}

#progress-bar {
    height: 100%;
    width: 0%;
    background-color: var(--progress-bar-fill);
    border-radius: 3px;
    transition: width .3s ease;
}

.step {
    display: none;
    width: 100%;
    text-align: center;
    padding: 0 15px;
}

.step.active {
    display: block;
}

#form-title {
    font-size: 24px;
    font-weight: bold;
    color: var(--text-color);
    margin-bottom: 20px;
    position: fixed;
    top: 80px;
    left: 0;
    right: 0;
    text-align: center;
}

h2 {
    font-size: 17px;
    font-weight: bold;
    margin-bottom: 20px;
    text-align: right;
    width: 100%;
    max-width: 500px;
    margin-right: auto;
    margin-left: auto;
    padding-right: 15px;
    box-sizing: border-box;
}

.input-container {
    position: relative;
    display: inline-block;
    width: 100%;
    max-width: 500px;
    text-align: right;
}

.input-container input {
    width: 100%;
    padding: 15px;
    text-align: right;
    font-size: 16px;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    background: var(--transparent);
    color: var(--transparent);
    caret-color: #000;
    box-sizing: border-box;
    transition: background-color .3s, border-color .3s;
    direction: ltr;
}

.input-container input:focus {
    background-color: var(--input-focus-bg);
    border-color: var(--input-focus-border);
    outline: none;
}

.input-container span {
    position: absolute;
    left: auto;
    right: 15px;
    top: 50%;
    transform: translateY(-50%);
    pointer-events: none;
    color: #999;
    font-size: 16px;
    white-space: nowrap;
}

.error-message {
    color: var(--text-color);
    background-color: var(--error-background);
    padding: 10px 15px;
    border-radius: 8px;
    border: 1px solid var(--error-border);
    font-size: 14px;
    margin-top: 10px;
    width: 100%;
    max-width: 500px;
    box-sizing: border-box;
    transition: background-color 0.3s ease, border-color 0.3s ease;
    display: flex;
    margin-left: auto;
    margin-right: auto;
}

.error-message.valid {
    background-color: var(--valid-background);
    border-color: var(--valid-border);
    color: var(--valid-text);
}

.error-message .tick-icon {
    display: none;
    width: 16px;
    height: 16px;
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%232e7d32"><path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z"/></svg>');
    background-repeat: no-repeat;
    background-size: contain;
    margin-left: 8px;
}

.error-message.valid .tick-icon {
    display: inline-block;
}

#goal-selection,
#activity-selection,
#meal-selection {
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin-top: 10px;
    width: 100%;
    max-width: 500px;
    margin-left: auto;
    margin-right: auto;
    text-align: right;
}

.goal-option,
.activity-option,
.meal-option {
    display: flex;
    flex-direction: row-reverse;
    align-items: center;
    text-align: right;
    direction: rtl;
    padding: 15px;
    justify-content: flex-end;
    border: 1.5px solid var(--input-focus-bg);
    border-radius: 8px;
    background-color: var(--option-bg);
    margin-bottom: 10px;
    cursor: pointer;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.goal-option img,
.activity-option img,
.meal-option img {
    width: 60px;
    height: 30px;
    object-fit: contain;
    margin-left: 15px;
}

.goal-option span,
.activity-option span,
.meal-option span {
    flex: 1;
    text-align: right;
    font-size: 12px;
    font-weight: bold;
}

.goal-option.selected,
.activity-option.selected,
.meal-option.selected {
    border-color: var(--orange-color);
    background-color: var(--option-selected-bg);
    transform: scale(1.02);
    box-shadow: 0 5px 15px var(--orange-shadow);
}

#next-button-container {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    background: var(--white-color);
    padding: 15px 20px;
    text-align: center;
    box-shadow: 0 -2px 10px var(--shadow-color);
    display: none;
}

button.next-step {
    width: 100%;
    max-width: 500px;
    padding: 18px;
    border: none;
    border-radius: 8px;
    background-color: var(--button-bg);
    color: var(--button-text);
    font-size: 18px;
    cursor: pointer;
    transition: background-color .3s;
}

button.next-step:not(:disabled) {
    background-color: var(--primary-color);
}

button.next-step:not(:disabled):hover {
    background-color: var(--button-hover-bg);
}

button.next-step:disabled {
    cursor: not-allowed;
    opacity: 0.7;
}

#submit-button-container {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    background: var(--white-color);
    padding: 15px 20px;
    text-align: center;
    box-shadow: 0 -2px 10px var(--shadow-color);
    display: none;
}

button.submit-form {
    width: 100%;
    max-width: 500px;
    padding: 18px;
    border: none;
    border-radius: 8px;
    background-color: var(--primary-color);
    color: var(--button-text);
    font-size: 18px;
    cursor: pointer;
    transition: background-color .3s;
}

button.submit-form:hover {
    background-color: var(--button-hover-bg);
}

#additional-info-selection,
#food-restriction-selection {
    display: flex;
    flex-direction: column;
    gap: 10px;
    width: 100%;
    max-width: 500px;
    margin: 20px auto;
}

.checkbox-container {
    position: relative;
    margin-bottom: 10px;
}

.real-checkbox {
    position: absolute;
    opacity: 0;
}

.checkbox-label {
    display: flex;
    align-items: center;
    padding: 15px 20px;
    border: 1.5px solid var(--input-focus-bg);
    border-radius: 8px;
    background-color: var(--option-bg);
    color: var(--text-color);
    font-size: 16px;
    cursor: pointer;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.checkbox-label:hover {
    background-color: var(--option-selected-bg);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px var(--light-shadow);
}

.check-icon {
    display: inline-block;
    width: 20px;
    height: 20px;
    border: 2px solid var(--border-color);
    border-radius: 4px;
    margin-left: 10px;
    position: relative;
    transition: all 0.3s ease;
}

.real-checkbox:checked + .checkbox-label .check-icon {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
}

.real-checkbox:checked + .checkbox-label .check-icon::after {
    content: "";
    position: absolute;
    left: 5px;
    top: 1px;
    width: 6px;
    height: 12px;
    border: solid var(--white-color);
    border-width: 0 2px 2px 0;
    transform: rotate(45deg);
}

.real-checkbox:checked + .checkbox-label {
    background-color: var(--option-selected-bg);
    border-color: var(--orange-color);
    transform: translateY(-2px) scale(1.02);
    box-shadow: 0 4px 12px var(--orange-light-shadow);
}

.label-text {
    flex: 1;
    text-align: right;
}

.separator {
    position: relative;
    height: 1px;
    margin: 20px 0;
    background: linear-gradient(to right, var(--transparent), var(--border-color), var(--transparent));
}

.separator::after {
    content: "یا";
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    background: var(--white-color);
    padding: 0 15px;
    color: var(--text-color);
    font-size: 14px;
}

#summary-container {
    max-height: calc(60vh - 100px);
    overflow-y: auto;
    margin-top: 20px;
    width: 100%;
    padding-bottom: 20px;
    max-width: 500px;
    margin: 20px auto;
    box-sizing: border-box;
}

.summary-item {
    display: flex;
    justify-content: space-between;
    padding: 12px 15px;
    margin: 8px 0;
    background-color: var(--option-bg);
    border-radius: 8px;
    font-size: 16px;
    max-width: 500px;
}

.summary-label {
    font-weight: bold;
    color: var(--primary-color);
    text-align: right;
}

.summary-value {
    color: var(--text-color);
    text-align: left;
}

#confirmation-checkbox {
    margin: 20px auto;
    width: 100%;
    max-width: 500px;
    padding: 0 20px;
    box-sizing: border-box;
}

#confirmation-checkbox .checkbox-label {
    background-color: var(--valid-background);
    border-color: var(--valid-border);
    padding: 15px;
    margin-bottom: 20px;
}

#gender-selection {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin: 30px 0;
    flex-wrap: nowrap;
    padding: 0;
}

#gender-selection-step h2 {
    margin-top: 90px;
    text-align: center;
}

#gender-selection-step h1 {
    font-size: 18px;
}

.gender-option {
    cursor: pointer;
    text-align: center;
    border: 2px solid var(--transparent);
    border-radius: 10px;
    padding: 10px;
    transition: all 0.3s ease;
    flex: 1;
    max-width: 120px;
    opacity: 0.5;
    pointer-events: none;
    filter: grayscale(80%);
    transform: scale(0.95);
    box-shadow: 0 4px 12px rgba(0,0,0,0.05);
}

.gender-option.active {
    opacity: 1;
    pointer-events: auto;
    filter: none;
}

.gender-option.selected {
    border-color: var(--primary-color);
    transform: scale(1.05);
    box-shadow: 0 10px 25px rgba(0, 133, 122, 0.3);
}

.gender-option img {
    width: 100%;
    height: auto;
    border-radius: 50%;
}

#terms-checkbox {
    width: 95%;
    max-width: 500px;
    margin: 20px auto;
}

.terms-combined {
    margin: 15px 0;
    border: 1px solid var(--border-color);
    border-radius: 12px;
    padding: 8px;
    background: var(--option-bg);
}

.terms-combined .checkbox-label {
    border: none;
    background: transparent;
    padding: 10px 5px;
    margin-bottom: 5px;
}

.terms-combined .terms-box {
    max-height: 120px;
    margin: 0;
    border: none;
    border-top: 1px dashed var(--border-color);
    border-radius: 0;
    padding: 8px 5px 0 5px;
    font-size: 12px;
    overflow-y: auto;
}

.terms-list {
    list-style-type: none;
    padding: 0;
    margin: 0;
    text-align: justify;
    line-height: 1.5;
    padding-right: 8px;
}

.terms-list li {
    position: relative;
    margin-bottom: 5px;
    padding-right: 25px;
    font-size: 11px;
    line-height: 1.4;
}

.terms-list li:before {
    content: "";
    position: absolute;
    right: 0;
    top: 5px;
    width: 12px;
    height: 12px;
    background-size: contain;
    background-repeat: no-repeat;
}

.terms-list li:nth-child(1):before {
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%2300857a"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/></svg>');
}

.terms-list li:nth-child(2):before {
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%2300857a"><path d="M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm2 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z"/></svg>');
}

.terms-list li:nth-child(3):before {
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%2300857a"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"/></svg>');
}

.terms-list li:nth-child(4):before {
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%2300857a"><path d="M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm0 10.99h7c-.53 4.12-3.28 7.79-7 8.94V12H5V6.3l7-3.11V11.99z"/></svg>');
}

@keyframes checkBounce {
    0% { transform: scale(0.8); opacity: 0.5; }
    50% { transform: scale(1.2); }
    100% { transform: scale(1); opacity: 1; }
}

@keyframes pulseGlow {
    0% { box-shadow: 0 0 0 0 var(--pulse-glow); }
    70% { box-shadow: 0 0 0 10px var(--transparent); }
    100% { box-shadow: 0 0 0 0 var(--transparent); }
}

.checked-animation .check-icon {
    animation: checkBounce 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.checked-animation {
    animation: pulseGlow 0.8s ease;
    border-color: var(--orange-color);
}

.info-text {
    display: flex;
    flex-direction: column;
    gap: 8px;
    text-align: right;
    direction: rtl;
    line-height: 1.6;
    font-size: 14px;
    flex-grow: 1;
    width: 100%;
}

.first-line {
    font-weight: 500;
    text-align: justify;
    text-align-last: right;
}

.second-line {
    color: #555;
    text-align: right;
    padding-right: 0;
    margin-right: 0;
    display: block;
    width: 100%;
    text-align: justify;
}

.info-content {
    display: flex;
    align-items: flex-start;
    gap: 12px;
    width: 100%;
}

.info-box {
    background-color: var(--error-background);
    border: 1px solid var(--error-border);
    border-radius: 8px;
    padding: 15px;
    width: calc(100% - 30px);
    max-width: 500px;
    margin-top: 10px;
}

#age-validation-container {
    width: 100%;
    max-width: 500px;
    margin: 10px auto 0;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    overflow: hidden;
}

#age-validation-container .error-message {
    margin: 0;
    padding: 15px;
    border-radius: 0;
    border: none;
    border-bottom: 1px dashed var(--border-color);
}

#age-validation-container .info-box {
    margin: 0;
    padding: 15px;
    border: none;
    border-radius: 0;
    background-color: transparent;
}

.separator-dotted {
    height: 1px;
    background: repeating-linear-gradient(
        to right,
        var(--border-color),
        var(--border-color) 2px,
        transparent 2px,
        transparent 4px
    );
    margin: 0 15px;
}

#height-validation-container {
    width: 100%;
    max-width: 500px;
    margin: 10px auto 0;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    overflow: hidden;
}

#height-validation-container .error-message {
    margin: 0;
    padding: 15px;
    border-radius: 0;
    border: none;
    border-bottom: 1px dashed var(--border-color);
}

#height-validation-container .info-box {
    margin: 0;
    padding: 15px;
    border: none;
    border-radius: 0;
    background-color: transparent;
}

#weight-validation-container {
    width: 100%;
    max-width: 500px;
    margin: 10px auto 0;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    overflow: hidden;
}

#weight-validation-container .error-message {
    margin: 0;
    padding: 15px;
    border-radius: 0;
    border: none;
    border-bottom: 1px dashed var(--border-color);
}

#weight-validation-container .info-box {
    margin: 0;
    padding: 15px;
    border: none;
    border-radius: 0;
    background-color: transparent;
}

#bmi-result-container {
    padding: 15px;
    margin-bottom: 15px;
}

.bmi-info {
    text-align: center;
    margin-bottom: 20px;
}

.bmi-info h3 {
    font-size: 18px;
    color: var(--primary-color);
    margin-bottom: 5px;
}

.bmi-category {
    font-size: 16px;
    font-weight: bold;
}

.bmi-scale-container {
    margin-top: 20px;
}

.bmi-scale-labels {
    display: flex;
    justify-content: space-between;
    margin-bottom: 5px;
    font-size: 12px;
    color: #666;
    direction: ltr;
}

.bmi-scale {
    height: 20px;
    background: linear-gradient(to right, 
        #4fc3f7, 
        #66bb6a 20%, 
        #ffee58 40%, 
        #ffa726 60%, 
        #ef5350 80%);
    border-radius: 10px;
    position: relative;
    overflow: hidden;
}

.bmi-indicator {
    position: absolute;
    top: -8px;
    width: 6px;
    height: 34px;
    background: linear-gradient(to bottom, #555, #222);
    border-radius: 3px;
    transform: translateX(-50%);
    transition: left 0.6s cubic-bezier(0.25, 0.1, 0.25, 1);
    box-shadow: 0 2px 4px rgba(0,0,0,0.2);
    display: none;
    z-index: 2;
}

.bmi-indicator::after {
    content: '';
    position: absolute;
    top: -10px;
    left: -5px;
    width: 0;
    height: 0;
    border-left: 8px solid transparent;
    border-right: 8px solid transparent;
    border-bottom: 10px solid #222;
    filter: drop-shadow(0 2px 2px rgba(0,0,0,0.2));
}

#bmi-result-container {
    transition: opacity 0.3s ease;
}

#target-weight-validation-container {
    width: 100%;
    max-width: 500px;
    margin: 10px auto 0;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    overflow: hidden;
}

#target-weight-validation-container .error-message {
    margin: 0;
    padding: 15px;
    border-radius: 0;
    border: none;
    border-bottom: 1px dashed var(--border-color);
}

#target-weight-validation-container .info-box {
    margin: 0;
    padding: 15px;
    border: none;
    border-radius: 0;
    background-color: transparent;
}

#goal-result {
    width: 100%;
    max-width: 600px;
    margin: 0 auto;
    text-align: center;
    flex: 1;
    display: flex;
    flex-direction: column;
}

.chart-container {
    position: relative;
    width: 100%;
    flex: 1;
    min-height: 300px;
    margin: 0 auto;
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.8s ease-out;
}

.chart-container.animate-chart {
    opacity: 1;
    transform: translateY(0);
}

.chart-message {
    margin-top: 15px;
    padding: 15px;
    background-color: rgba(0, 133, 122, 0.1);
    border-radius: 8px;
    font-size: 15px;
    line-height: 1.6;
    color: var(--text-color);
    border-right: 3px solid var(--primary-color);
    text-align: justify;
    margin-bottom: 20px;
}

@media (min-width: 768px) {
    body {
        background-color: var(--white-color);
    }
    
    .input-container,
    #goal-selection,
    #activity-selection,
    #meal-selection,
    button.next-step {
        width: 500px;
    }
    
    #goal-weight-display {
        height: calc(100vh - 160px); /* ارتفاع کمتر در موبایل */
    }
    
    .chart-container {
        min-height: 250px;
    }
    
    .chart-message {
        font-size: 14px;
        padding: 12px;
        margin-top: 10px;
    }
}

@media (max-width: 768px) {
    #header-container {
        padding: 10px 15px;
    }
    
    #progress-bar-container {
        width: calc(100% - 30px);
    }
    
    .chart-container {
        height: 60vh !important;
        max-height: 500px;
        min-height: 350px;
    }
    
    #goal-result {
        margin: 20px auto;
    }
    
    .chart-message {
        margin-top: 20px;
        padding: 12px;
        font-size: 14px;
    }
}

.step[data-step="3"] ~ #next-button-container,
.step[data-step="4"] ~ #next-button-container,
.step[data-step="5"] ~ #next-button-container,
.step[data-step="6"] ~ #next-button-container,
.step[data-step="7"] ~ #next-button-container,
.step[data-step="10"] ~ #next-button-container,
.step[data-step="11"] ~ #next-button-container,
.step[data-step="12"] ~ #next-button-container {
    display: block;
}


#goal-weight-display {
    display: none;
    justify-content: center;
    align-items: center;
    min-height: 200px;
    padding: 20px;
    padding-top: 0px;
}

.step.active#goal-weight-display {
    display: flex; 
}

.step7-image-container {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 30px;
    padding: 0px;
}

.step7-image-container svg {
    max-width: 100%;
    height: auto;
}

/* استایل مخصوص حالت افزایش وزن */
.step7-image-container svg[width="592px"] image:nth-child(2) {
    transform: translateX(-50%);
}

@media (max-width: 768px) {
    .step7-image-container svg {
        width: 100%;
        height: auto;
    }
    
    .step7-image-container svg[width="592px"] image:nth-child(2) {
        transform: none;
    }
}


.weight-display-container {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    gap: 10px;
    width: 100%;
    max-width: 500px;
    margin: 0px auto 0;
    padding: 0 0px;
    box-sizing: border-box;
}

.weight-display-box {
    width: calc(50% - 5px);
    height: 90px;
    background: linear-gradient(135deg, #f5f7fa 0%, #e4e8eb 100%);
    border-radius: 10px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 12px;
    border: 1px solid rgba(0, 133, 122, 0.1);
    position: relative;
    overflow: hidden;
}

.weight-display-box.current-weight::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background: linear-gradient(90deg, #ff929a, #ffe0e3);
}

.weight-display-box.target-weight::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 4px;
    background: linear-gradient(90deg, #00857a, #00b4a0);
}

.weight-value {
    font-size: 26px;
    font-weight: bold;
    line-height: 1;
    margin-bottom: 4px;
    font-family: 'BordeauxBlack', sans-serif;
}

.weight-display-box.current-weight .weight-value {
    color: #ff9099;
}

.weight-display-box.target-weight .weight-value {
    color: #00857a;
}

.weight-unit {
    font-size: 12px;
    color: #666;
    margin-bottom: 6px;
}

.weight-label {
    font-size: 11px;
    color: #888;
    text-align: center;
    padding-top: 5px;
    border-top: 1px dashed rgba(0, 0, 0, 0.1);
    width: 100%;
}

@media (max-width: 500px) {
    .weight-display-container {
        /*width: calc(100% - 40px);*/
        max-width: 100%;
        padding: 0;
        gap: 8px;
    }
    
    .weight-display-box {
        width: calc(50% - 4px);
        height: 85px;
        padding: 10px;
    }
}

@media (max-width: 480px) {
    .weight-display-container {
        flex-direction: row;
        gap: 8px;
        padding: 0 0px;
    }
    
    .weight-display-box {
        width: 42%;
        height: 85px;
        padding: 10px;
    }
    
    .weight-value {
        font-size: 24px;
    }
    
    .weight-unit {
        font-size: 11px;
    }
    
    .weight-label {
        font-size: 10px;
    }
}

.goal-title-container {
    width: 100%;
    text-align: center;
}

.goal-title {
    font-size: 18px;
    color: #00857a;
    margin: 0;
    padding: 8px 15px;
    display: inline-block;
}

.goal-title::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 100px;
    height: 3px;
    background: linear-gradient(90deg, #00857a, #00b4a0);
    border-radius: 3px;
}

@media (max-width: 768px) {
    .goal-title {
        font-size: 18px;
        padding-top: 20px;
    }
}

@media (max-width: 768px) {
    .goal-title-container {
        display: block;
    }
}

@media (min-width: 769px) {
    .goal-title-container {
        display: none;
    }
}

#goal-title-text {
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.5s ease-out;
    text-align: center;
}

.step.active #goal-title-text {
    opacity: 1;
    transform: translateY(0);
}
.goal-svg {
    width: 100%;
    height: auto;
    max-width: 592px;
    max-height: 392px;
    display: block;
    margin: 0 auto;
}

.weight-display-container {
    position: relative;
    z-index: 2;
}

.checkbox-step-container {
    padding: 0 15px;
    width: 100%;
    max-width: 500px;
}

.checkbox-list-container {
    max-height: 250px;
    overflow-y: auto;
    padding: 10px 5px;
    margin: 5px auto;
    scrollbar-width: thin;
    scrollbar-color: var(--primary-color) var(--background-color);
}

.checkbox-list-container::-webkit-scrollbar {
    width: 6px;
}

.checkbox-list-container::-webkit-scrollbar-track {
    background: var(--background-color);
    border-radius: 3px;
}

.checkbox-list-container::-webkit-scrollbar-thumb {
    background-color: var(--primary-color);
    border-radius: 3px;
}

.stand-alone-none-option {
    padding: 5px;
    margin-bottom: 5px;
}

button.submit-form:disabled {
    cursor: not-allowed;
    opacity: 0.7;
    background-color: var(--button-bg) !important;
}

#stomach-discomfort-step h3 {
    font-size: 15px;
    color: var(--primary-color);
    margin: 15px 0 10px;
    text-align: right;
    padding-right: 10px;
}
-----------------------------------------------------------------------------------------------------
<?php
// Check if user is logged in
if (!is_user_logged_in()) {
    wp_redirect(wp_login_url()); // Redirect to login page
    exit;
}

// Load the form HTML
include 'form.html';
?>
-----------------------------------------------------------------------------------------------------

این کد رو ببین. 
لطفا کدهای css ی که استفاده نشدن رو حذف کن